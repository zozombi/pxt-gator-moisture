{"README.md":"# gator:light Light Sensor\n\n[![Community Discord](https://img.shields.io/discord/448979533891371018.svg)](https://aka.ms/makecodecommunity)\n\nThe gator:starter, which includes the gator:light and gator:temp can be purchased [here.](https://www.sparkfun.com/products/14891)\nThe gator:light, included on the gator:starter is an analog light sensor that can be alligator clipped to the micro:bit or gator:bit board.\n\n![SparkFun gator:light](https://raw.githubusercontent.com/sparkfun/pxt-gator-light/master/icon.png)  \n\n## ~ hint\n\nTo use this package, go to https://makecode.microbit.org, click ``Add package`` and search for **gator-light**. The package is located [here](https://makecode.microbit.org/pkg/sparkfun/pxt-gator-light)\n\n## ~\n\n## Basic usage\n\n```blocks\n//Sets the value of the light variable to the value read from the gator:light\nlet light = 0\nlight = gatorlight.light(AnalogPin.P0, gatorlightType.Lux)\n```\n\nUse ``||Get light on pin||`` to read the light value from a gator:light sensor attached to a given pin in lux or the straight ADC value.\n\n## Example: Light Detector\n\n```blocks\n//Read light value and write it to the micro:bit screen as a bar graph.\nlet light = 0\nbasic.forever(function () {\n    light = gatorlight.light(AnalogPin.P0, gatorlightType.Lux)\n    led.plotBarGraph(\n        light,\n        1023\n    )\n})\n```\n\n## Supported targets\n\n* for PXT/microbit\n\n## License\n\nMIT\n\n```package\ngatorMoisture=github:zozombi/pxt-gator-moisture\n```\n","enums.d.ts":"// Auto-generated. Do not edit.\ndeclare namespace gatorMoisture {\n}\n\n// Auto-generated. Do not edit. Really.\n","gatormoisture.cpp":"/**\n* Andy England @ SparkFun Electronics\n* September 6, 2018\n* https://github.com/sparkfun/pxt-light-bit\n*\n* Development environment specifics:\n* Written in Microsoft PXT\n* Tested with a SparkFun temt6000 sensor and micro:bit\n*\n* This code is released under the [MIT License](http://opensource.org/licenses/MIT).\n* Please review the LICENSE.md file included with this example. If you have any questions\n* or concerns with licensing, please contact techsupport@sparkfun.com.\n* Distributed as-is; no warranty is given.\n*/\n\n\n#include \"pxt.h\"\n#include <cstdint>\n#include <math.h>\n\nusing namespace pxt;\n\nnamespace gatorMoisture {\n    /*\n    * Calculates the light in Lux based on the ADC value passed in. 1 step in adcVal is equal to .488 uA or .976 lux at 5V\n    */\n    //%\n    uint16_t getMoisture(int16_t ADCVal) {\n\n        return ADCVal / 1023.0;\n    }\n\n}\n","gatormoisture.ts":"/**\n* Andy England @ SparkFun Electronics\n* September 6, 2018\n* https://github.com/sparkfun/pxt-light-bit\n\n* Development environment specifics:\n* Written in Microsoft Makecode\n* Tested with a SparkFun gatorlight sensor and micro:bit\n*\n* This code is released under the [MIT License](http://opensource.org/licenses/MIT).\n* Please review the LICENSE.md file included with this example. If you have any questions\n* or concerns with licensing, please contact techsupport@sparkfun.com.\n* Distributed as-is; no warranty is given.\n*/\n\n\n/**\n * Functions to operate the gatorlight sensor\n */\n\n enum gatorMoistureType{\n\t moisture=1,\n\t adcVal=2,\n }\n\n\n\n//% color=#325aed icon=\"\\uf185\"\nnamespace gatorMoisture {\n\n    // Functions for reading light from the gatorlight in lux or straight adv value\n\n    /**\n    * Reads the number\n    */\n    //% weight=30 blockId=\"gatorMoisture_moisture\" block=\"Get moisture on pin %pin | in %gatorMoistureType\"\n    export function moisture(pin: AnalogPin, type: gatorMoistureType): number{\n      let ADCVal = pins.analogReadPin(pin)\n      switch(type){\n        case gatorMoistureType.moisture: return getMoisture(ADCVal)\n        case gatorMoistureType.adcVal: return ADCVal\n        default: return -11111111\n      }\n    }\n\n\t/**\n     * Function used for simulator, actual implementation is in gatorlight.cpp\n     */\n    //% shim=gatorMoisture::getMoisture\n    function getMoisture(ADCVal: number) {\n        // function for simulator\n        return 0\n    }\n}\n","pxt.json":"{\n    \"name\": \"gatormoisture\",\n    \"version\": \"0.0.5\",\n    \"description\": \"SparkFun gator:moisture Temperature Sensor\",\n    \"license\": \"MIT\",\n    \"dependencies\": {\n        \"core\": \"*\"\n    },\n    \"files\": [\n        \"README.md\",\n        \"gatormoisture.ts\",\n        \"gatormoisture.cpp\",\n        \"shims.d.ts\",\n        \"enums.d.ts\"\n    ],\n    \"testFiles\": [],\n    \"public\": true,\n    \"targetVersions\": {\n        \"branch\": \"v2.1.42\",\n        \"tag\": \"v2.1.42\",\n        \"commits\": \"https://github.com/microsoft/pxt-microbit/commits/67e1692c2ddb6a8334ce39d01f322ab541de534a\",\n        \"target\": \"2.1.42\",\n        \"pxt\": \"5.32.3\"\n    }\n}\n","shims.d.ts":"// Auto-generated. Do not edit.\n\n\n    /**\n     * Andy England @ SparkFun Electronics\n     * September 6, 2018\n     * https://github.com/sparkfun/pxt-light-bit\n     *\n     * Development environment specifics:\n     * Written in Microsoft PXT\n     * Tested with a SparkFun temt6000 sensor and micro:bit\n     *\n     * This code is released under the [MIT License](http://opensource.org/licenses/MIT).\n     * Please review the LICENSE.md file included with this example. If you have any questions\n     * or concerns with licensing, please contact techsupport@sparkfun.com.\n     * Distributed as-is; no warranty is given.\n     */\n\ndeclare namespace gatorMoisture {\n}\n\n// Auto-generated. Do not edit. Really.\n"}